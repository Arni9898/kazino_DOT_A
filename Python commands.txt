выводить на экран (команда print()) и считывать 
информацию с клавиатуры (команда input()).
print()
print('Мы изучаем язык Python')
print('Я', 'учусь', 'программировать', 'на', 'Python!')

input()
print('Привет,', input())
variable_name = input()
name = input('Как тебя зовут?')
name, surname = input(), input()

sep=''
По умолчанию команда print() принимает несколько 
аргументов, выводит их через один пробел, после чего 
ставит перевод строки. Это поведение можно изменить, 
используя необязательные именованные параметры sep и end.
print('aa', 'bb', 'cc', sep='*') #сепаратор
aa*bb*cc

end=''
Как вы можете заметить, после каждого print() курсор 
переходит на новую строку. И это поведение тоже не 
является случайным, потому что у команды print() есть 
параметр end, определяющий, что нужно добавить в конец 
вывода. По умолчанию параметр end равен символу перевода 
строки (\n).
minus = '-'
print('a', 'b', 'c', end=minus)
print('second line')
a b c-second line


#счет
num1 = 7               
num2 = 10              
num3 = num1 + num2

В языке Python, как и в математике, над числами можно 
совершать 4 основные операции (+, -, *, /).
a = 3
b = 2
print(a + b)
print(a - b)
print(a * b)
print(a / b)
num2 = (2 + 3) * 4

Операция возведения в степень (**)
Операция нахождения остатка (%)
Операция целочисленного деления (//)
print(2 ** 0)



#Преобразование типов

int()
Для того чтобы преобразовать строку к целому числу, 
мы используем команду int()
s = '1992'
year = int(s)
print(year)
num1 = int(input())

str()
Для того чтобы преобразовать целое число в строку, 
мы используем команду str(). 
num = 17
s = str(num) # теперь s содержит строку '17'



#Условный оператор if-else

Проверка условий и принятие решений по результатам этой 
проверки называется ветвлением (branching). Программа 
таким способом выбирает, по какой из возможных ветвей 
ей двигаться дальше.
В Python проверка условия осуществляется при помощи 
ключевого слова if.

answer = input('Какой язык программирования мы изучаем?')
if answer == 'Python':
    print('Верно! Мы ботаем Python =)')
    print('Python - отличный язык!')

Двоеточие (:) в конце строки с инструкцией if сообщает 
интерпретатору Python, что дальше находится блок команд. 
В блок команд входят все строки с отступом под строкой 
с инструкцией if, вплоть до следующей строки без отступа.

Предыдущая программа выводит текст в случае, если 
условие истинно. Но если условие ложно, то программа 
ничего не выводит. Для того чтобы обеспечить возможность 
выполнять что-либо в случае, если условие оказалось 
ложным, мы используем ключевое слово else.

answer = input('Какой язык программирования мы изучаем?')
if answer == 'Python':
    print('Верно! Мы ботаем Python =)')
    print('Python - отличный язык!')
else:
    print('Не совсем так!')

По соглашению PEP 8, для отступа блоков кода 
используются 4 пробела. Если в среде VS Code или Wing 
IDE нажать на клавишу Enter после if, она автоматически 
выставит 4 пробела


Не стоит путать оператор присваивания (=) с условным 
оператором (==).
Оператор присваивания (=) присваивает переменным значения:
Для проверки двух элементов на равенство Python 
использует удвоенный знак равно (==)
if x != 7
if x <= 7


















